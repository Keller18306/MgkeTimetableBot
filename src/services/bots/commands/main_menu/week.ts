import { TelegramBotCommand } from 'puregram/generated';
import { WeekIndex, randArray, removePastDays } from "../../../../utils";
import { raspCache } from '../../../parser';
import { AbstractCommand, CmdHandlerParams } from "../../abstract";

export default class extends AbstractCommand {
    public regexp = /^((!|\/)(get)?(rasp)?week|(üìë\s)?(—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\s)?–Ω–∞ –Ω–µ–¥–µ–ª—é)$/i
    public payloadAction = null;
    public tgCommand: TelegramBotCommand = {
        command: 'week',
        description: '–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é'
    };

    async handler(params: CmdHandlerParams) {
        const { context, chat, actions, scheduleFormatter, keyboard } = params;

        if (Object.keys(raspCache.groups.timetable).length == 0 &&
            Object.keys(raspCache.teachers.timetable).length == 0) {
            return context.send('–î–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –æ–∂–∏–¥–∞–π—Ç–µ...');
        }

        if (chat.mode == 'student' || chat.mode == 'parent') return this.groupRasp(params);
        if (chat.mode == 'teacher') return this.teacherRasp(params);

        return context.send('–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –µ—â—ë –Ω–µ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞');
    }

    private async groupRasp({ context, chat, actions, scheduleFormatter, keyboard }: CmdHandlerParams) {
        if (chat.group == null) {
            const randGroup = randArray(Object.keys(raspCache.groups.timetable));

            return context.send(
                '–í–∞—à–∞ —É—á–µ–±–Ω–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞\n\n' +
                '–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /setGroup <group>\n' +
                '–ü—Ä–∏–º–µ—Ä:\n' +
                `/setGroup ${randGroup}`
            );
        }

        const group = raspCache.groups.timetable[chat.group];
        if (group === undefined) return context.send('–î–∞–Ω–Ω–æ–π —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');

        const weekIndex = WeekIndex.getRelevant();
        const weekRange = weekIndex.getWeekDayIndexRange();

        let days = this.app.getService('timetable').getGroupDaysByRange(weekRange, chat.group);
        if (chat.hidePastDays) {
            days = removePastDays(days);
        }

        actions.deleteLastMsg();

        const message = scheduleFormatter.formatGroupFull(String(chat.group), {
            showHeader: false,
            days: days
        });

        actions.deleteUserMsg();

        return context.send(message, {
            keyboard: keyboard.WeekControl('group', String(chat.group), weekIndex.valueOf(), chat.hidePastDays)
        }).then(id => {
            actions.handlerLastMsgUpdate(context);
            return id;
        });
    }

    private async teacherRasp({ context, chat, actions, scheduleFormatter, keyboard }: CmdHandlerParams) {
        if (chat.teacher == null) {
            const randTeacher = randArray(Object.keys(raspCache.teachers.timetable));

            return context.send(
                '–ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ –≤—ã–±—Ä–∞–Ω–æ\n\n' +
                '–í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /setTeacher <teacher>\n' +
                '–ü—Ä–∏–º–µ—Ä:\n' +
                `/setTeacher ${randTeacher}`
            );
        }

        const teacher = raspCache.teachers.timetable[chat.teacher];
        if (teacher === undefined) return context.send('–î–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');

        const weekIndex = WeekIndex.getRelevant();
        const weekRange = weekIndex.getWeekDayIndexRange();

        let days = this.app.getService('timetable').getTeacherDaysByRange(weekRange, chat.teacher);
        if (chat.hidePastDays) {
            days = removePastDays(days);
        }

        actions.deleteLastMsg();

        const message = scheduleFormatter.formatTeacherFull(chat.teacher, {
            showHeader: false,
            days: days
        });

        actions.deleteUserMsg();

        return context.send(message, {
            keyboard: keyboard.WeekControl('teacher', chat.teacher, weekIndex.valueOf(), chat.hidePastDays)
        }).then(context => actions.handlerLastMsgUpdate(context));
    }
}